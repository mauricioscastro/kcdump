FROM golang:1.25.0 as builder
ARG TARGETOS
ARG TARGETARCH

WORKDIR /workspace
COPY go.mod go.mod
COPY go.sum go.sum
COPY pkg/ pkg/
COPY cmd/main.go cmd/main.go

RUN CGO_ENABLED=0 GOOS=${TARGETOS:-linux} GOARCH=${TARGETARCH} go build -a -o kcdump cmd/main.go

from registry.access.redhat.com/ubi10/ubi:10.0-1754586730

ENV PGDATA=/var/lib/pgsql/pgdata 
ENV POSTGRESQL_USER=postgres 
ENV POSTGRESQL_PASSWORD=postgres 
ENV POSTGRESQL_DATABASE=postgres
ENV PATH="$PATH:/usr/pgsql-17/bin"

RUN rpm -ivh https://dl.fedoraproject.org/pub/epel/epel-release-latest-10.noarch.rpm && \
    dnf install -y inotify-tools && \
    dnf install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-10-x86_64/pgdg-redhat-repo-latest.noarch.rpm && \
    dnf install -y postgresql17-plpython3 && \
    dnf install -y postgresql17-server && \
    dnf install -y python3-yaml 

COPY --from=builder /workspace/kcdump /bin/
COPY dumpdb/dumpdb-init.sql /var/lib/pgsql/

USER postgres
WORKDIR /var/lib/pgsql

RUN initdb --auth=trust --auth-host=trust --auth-local=trust && \
    pg_ctl start -o "-h ''" && \
    psql -c "ALTER ROLE postgres WITH ENCRYPTED PASSWORD ''" && \
    psql -f dumpdb-init.sql && \
    pg_ctl stop && \
    sed -ie 's;host  *all  *all  *::1/128.*;host    all             all             0.0.0.0/0               trust;g' /var/lib/pgsql/pgdata/pg_hba.conf  && \
    echo "host    all             all             ::1/128                 trust" >> /var/lib/pgsql/pgdata/pg_hba.conf  && \
    echo "listen_addresses = '*'" >> /var/lib/pgsql/pgdata/postgresql.conf && \
    sed -ie 's/^logging_collector/#logging_collector/g' /var/lib/pgsql/pgdata/postgresql.conf && \
    mkdir /tmp/kcdump && \
    chmod 777 /tmp/kcdump

USER 0
RUN groupmod -g 1001 postgres && \
    usermod -u 1001 -g 1001 postgres && \
    chown -R 1001:1001 /var/lib/pgsql && \
    chown -R 1001:1001 /run/postgresql && \
    chown -R 1001:1001 /tmp/kcdump

USER postgres
WORKDIR /var/lib/pgsql

ENV KCD_TARGETDIR=/tmp/kcdump

ENTRYPOINT postgres





